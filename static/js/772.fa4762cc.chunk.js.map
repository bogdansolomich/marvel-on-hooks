{"version":3,"file":"static/js/772.fa4762cc.chunk.js","mappings":"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","sources":["components/appBanner/AppBanner.js","components/errorMessage/ErrorMessage.js","components/pages/SinglePage.js","services/MarvelService.js","hooks/http.hook.js","components/skeleton/Skeleton.js","utils/setContent.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n  return (\n    <div className=\"app__banner\">\n      <img src={avengers} alt=\"Avengers\" />\n      <div className=\"app__banner-text\">\n        New comics every week!\n        <br />\n        Stay tuned!\n      </div>\n      <img src={avengersLogo} alt=\"Avengers logo\" />\n    </div>\n  );\n};\n\nexport default AppBanner;\n","import img from './error.gif';\n\nconst ErrorMessage = () => {\n  return (\n    <img\n      style={{\n        display: 'block',\n        width: '250px',\n        height: '250px',\n        objectFit: 'contain',\n        margin: '0 auto',\n      }}\n      src={img}\n      alt=\"Error\"\n    />\n  );\n};\n\nexport default ErrorMessage;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport useMarvelService from '../../services/MarvelService';\nimport AppBanner from '../appBanner/AppBanner';\n\nimport setContent from '../../utils/setContent';\nimport './singleComicLayout/singleComicLayout.scss';\n\n// Хотелось бы вынести функцию по загрузке данных как отдельный аргумент\n// Но тогда мы потеряем связь со стэйтами загрузки и ошибки\n// А если вынесем их все в App.js - то они будут одни на все страницы\n\nconst SinglePage = ({ Component, dataType }) => {\n  const { id } = useParams();\n  const [data, setData] = useState(null);\n  const { getComic, getCharacter, clearError, process, setPropcess } =\n    useMarvelService();\n\n  useEffect(() => {\n    updateData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id]);\n\n  const updateData = () => {\n    clearError();\n\n    switch (dataType) {\n      case 'comic':\n        getComic(id)\n          .then(onDataLoaded)\n          .then(() => setPropcess('confirmed'))\n          .catch(() => setData(null));\n        break;\n      case 'character':\n        getCharacter(id)\n          .then(onDataLoaded)\n          .then(() => setPropcess('confirmed'))\n          .catch(() => setData(null));\n        break;\n      default:\n        console.warn(`Unsupported dataType: ${dataType}`);\n        break;\n    }\n  };\n\n  const onDataLoaded = data => {\n    setData(data);\n  };\n\n  // const errorMessage = error ? <ErrorMessage /> : null;\n  // const spinner = loading ? <Spinner /> : null;\n  // const content = !(loading || error || !data) ? (\n  //   <Component data={data} />\n  // ) : null;\n\n  return (\n    <>\n      <AppBanner />\n      {setContent(process, Component, data)}\n    </>\n  );\n};\n\nexport default SinglePage;\n","import { useHttp } from '../hooks/http.hook';\n\nconst useMarvelService = () => {\n  const { request, clearError, process, setPropcess } = useHttp();\n\n  const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n  // ЗДЕСЬ БУДЕТ ВАШ КЛЮЧ, ЭТОТ КЛЮЧ МОЖЕТ НЕ РАБОТАТЬ\n  const _apiKey = 'apikey=c5d6fc8b83116d92ed468ce36bac6c62';\n  const _baseOffset = 210;\n\n  const getAllCharacters = async (offset = _baseOffset) => {\n    const res = await request(\n      `${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\n    );\n    return res.data.results.map(_transformCharacter);\n  };\n\n  // Вариант модификации готового метода для поиска по имени.\n  // Вызывать его можно вот так: getAllCharacters(null, name)\n\n  // const getAllCharacters = async (offset = _baseOffset, name = '') => {\n  //     const res = await request(`${_apiBase}characters?limit=9&offset=${offset}${name ? `&name=${name}` : '' }&${_apiKey}`);\n  //     return res.data.results.map(_transformCharacter);\n  // }\n\n  // Или можно создать отдельный метод для поиска по имени\n\n  const getCharacterByName = async name => {\n    const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\n    return res.data.results.map(_transformCharacter);\n  };\n\n  const getCharacter = async id => {\n    const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n    return _transformCharacter(res.data.results[0]);\n  };\n\n  const getAllComics = async (offset = 0) => {\n    const res = await request(\n      `${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\n    );\n    return res.data.results.map(_transformComics);\n  };\n\n  const getComic = async id => {\n    const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n    return _transformComics(res.data.results[0]);\n  };\n\n  const _transformCharacter = char => {\n    return {\n      id: char.id,\n      name: char.name,\n      description: char.description\n        ? `${char.description.slice(0, 210)}...`\n        : 'There is no description for this character',\n      thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n      homepage: char.urls[0].url,\n      wiki: char.urls[1].url,\n      comics: char.comics.items,\n    };\n  };\n\n  const _transformComics = comics => {\n    return {\n      id: comics.id,\n      title: comics.title,\n      description: comics.description || 'There is no description',\n      pageCount: comics.pageCount\n        ? `${comics.pageCount} p.`\n        : 'No information about the number of pages',\n      thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\n      language: comics.textObjects[0]?.language || 'en-us',\n      price: comics.prices[0].price\n        ? `${comics.prices[0].price}$`\n        : 'not available',\n    };\n  };\n\n  return {\n    clearError,\n    process,\n    setPropcess,\n    getAllCharacters,\n    getCharacterByName,\n    getCharacter,\n    getAllComics,\n    getComic,\n  };\n};\n\nexport default useMarvelService;\n","import { useState, useCallback } from 'react';\n\nexport const useHttp = () => {\n  const [process, setPropcess] = useState('waiting');\n\n  const request = useCallback(\n    async (\n      url,\n      method = 'GET',\n      body = null,\n      headers = { 'Content-Type': 'application/json' }\n    ) => {\n      setPropcess('loading');\n\n      try {\n        const response = await fetch(url, { method, body, headers });\n\n        if (!response.ok) {\n          throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n        }\n\n        const data = await response.json();\n\n        return data;\n      } catch (e) {\n        setPropcess('error');\n        throw e;\n      }\n    },\n    []\n  );\n\n  const clearError = useCallback(() => {\n    setPropcess('loading');\n  }, []);\n\n  return { request, clearError, process, setPropcess };\n};\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n  return (\n    <>\n      <p className=\"char__select\">\n        Please select a character to see information\n      </p>\n      <div className=\"skeleton\">\n        <div className=\"pulse skeleton__header\">\n          <div className=\"pulse skeleton__circle\"></div>\n          <div className=\"pulse skeleton__mini\"></div>\n        </div>\n        <div className=\"pulse skeleton__block\"></div>\n        <div className=\"pulse skeleton__block\"></div>\n        <div className=\"pulse skeleton__block\"></div>\n      </div>\n    </>\n  );\n};\n\nexport default Skeleton;\n","import Spinner from '../components/spinner/Spinner';\nimport ErrorMessage from '../components/errorMessage/ErrorMessage';\nimport Skeleton from '../components/skeleton/Skeleton';\n\nconst setContent = (process, Component, data) => {\n  switch (process) {\n    case 'waiting':\n      return <Skeleton />;\n    case 'loading':\n      return <Spinner />;\n    case 'confirmed':\n      return <Component data={data} />;\n    case 'error':\n      return <ErrorMessage />;\n    default:\n      throw new Error('Unexpected process state');\n  }\n};\n\nexport default setContent;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["_jsxs","className","children","_jsx","src","avengers","alt","avengersLogo","style","display","width","height","objectFit","margin","img","_ref","Component","dataType","id","useParams","_useState","useState","_useState2","_slicedToArray","data","setData","_useMarvelService","useMarvelService","getComic","getCharacter","clearError","process","setPropcess","useEffect","updateData","then","onDataLoaded","catch","console","warn","concat","_Fragment","AppBanner","setContent","_useHttp","request","useCallback","_asyncToGenerator","_regeneratorRuntime","_callee","url","method","body","headers","response","_args","arguments","_context","prev","next","length","undefined","fetch","sent","ok","Error","status","json","abrupt","t0","stop","_x","apply","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacterByName","_ref2","_callee2","name","_context2","_ref3","_callee3","_context3","_x2","getAllComics","_ref4","_callee4","_args4","_context4","_transformComics","_ref5","_callee5","_context5","_x3","char","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","_comics$textObjects$","title","pageCount","language","textObjects","price","prices","Skeleton","Spinner","ErrorMessage","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","fn","self","this","args","err"],"sourceRoot":""}