{"version":3,"file":"static/js/772.cd3a08c3.chunk.js","mappings":"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","sources":["components/appBanner/AppBanner.js","components/errorMessage/ErrorMessage.js","components/pages/SinglePage.js","services/MarvelService.js","hooks/http.hook.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n  return (\n    <div className=\"app__banner\">\n      <img src={avengers} alt=\"Avengers\" />\n      <div className=\"app__banner-text\">\n        New comics every week!\n        <br />\n        Stay tuned!\n      </div>\n      <img src={avengersLogo} alt=\"Avengers logo\" />\n    </div>\n  );\n};\n\nexport default AppBanner;\n","import img from './error.gif';\n\nconst ErrorMessage = () => {\n  return (\n    <img\n      style={{\n        display: 'block',\n        width: '250px',\n        height: '250px',\n        objectFit: 'contain',\n        margin: '0 auto',\n      }}\n      src={img}\n      alt=\"Error\"\n    />\n  );\n};\n\nexport default ErrorMessage;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport AppBanner from '../appBanner/AppBanner';\nimport './singleComicLayout/singleComicLayout.scss';\n\n// Хотелось бы вынести функцию по загрузке данных как отдельный аргумент\n// Но тогда мы потеряем связь со стэйтами загрузки и ошибки\n// А если вынесем их все в App.js - то они будут одни на все страницы\n\nconst SinglePage = ({ Component, dataType }) => {\n  const { id } = useParams();\n  const [data, setData] = useState(null);\n  const { loading, error, getComic, getCharacter, clearError } =\n    useMarvelService();\n\n  useEffect(() => {\n    updateData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id]);\n\n  const updateData = () => {\n    clearError();\n\n    switch (dataType) {\n      case 'comic':\n        getComic(id)\n          .then(onDataLoaded)\n          .catch(() => setData(null));\n        break;\n      case 'character':\n        getCharacter(id)\n          .then(onDataLoaded)\n          .catch(() => setData(null));\n        break;\n      default:\n        console.warn(`Unsupported dataType: ${dataType}`);\n        break;\n    }\n  };\n\n  const onDataLoaded = data => {\n    setData(data);\n  };\n\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading ? <Spinner /> : null;\n  const content = !(loading || error || !data) ? (\n    <Component data={data} />\n  ) : null;\n\n  return (\n    <>\n      <AppBanner />\n      {errorMessage}\n      {spinner}\n      {content}\n    </>\n  );\n};\n\nexport default SinglePage;\n","import { useHttp } from '../hooks/http.hook';\n\nconst useMarvelService = () => {\n  const { loading, request, error, clearError } = useHttp();\n\n  const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n  // ЗДЕСЬ БУДЕТ ВАШ КЛЮЧ, ЭТОТ КЛЮЧ МОЖЕТ НЕ РАБОТАТЬ\n  const _apiKey = 'apikey=c5d6fc8b83116d92ed468ce36bac6c62';\n  const _baseOffset = 210;\n\n  const getAllCharacters = async (offset = _baseOffset) => {\n    const res = await request(\n      `${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\n    );\n    return res.data.results.map(_transformCharacter);\n  };\n\n  // Вариант модификации готового метода для поиска по имени.\n  // Вызывать его можно вот так: getAllCharacters(null, name)\n\n  // const getAllCharacters = async (offset = _baseOffset, name = '') => {\n  //     const res = await request(`${_apiBase}characters?limit=9&offset=${offset}${name ? `&name=${name}` : '' }&${_apiKey}`);\n  //     return res.data.results.map(_transformCharacter);\n  // }\n\n  // Или можно создать отдельный метод для поиска по имени\n\n  const getCharacterByName = async name => {\n    const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\n    return res.data.results.map(_transformCharacter);\n  };\n\n  const getCharacter = async id => {\n    const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n    return _transformCharacter(res.data.results[0]);\n  };\n\n  const getAllComics = async (offset = 0) => {\n    const res = await request(\n      `${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\n    );\n    return res.data.results.map(_transformComics);\n  };\n\n  const getComic = async id => {\n    const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n    return _transformComics(res.data.results[0]);\n  };\n\n  const _transformCharacter = char => {\n    return {\n      id: char.id,\n      name: char.name,\n      description: char.description\n        ? `${char.description.slice(0, 210)}...`\n        : 'There is no description for this character',\n      thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n      homepage: char.urls[0].url,\n      wiki: char.urls[1].url,\n      comics: char.comics.items,\n    };\n  };\n\n  const _transformComics = comics => {\n    return {\n      id: comics.id,\n      title: comics.title,\n      description: comics.description || 'There is no description',\n      pageCount: comics.pageCount\n        ? `${comics.pageCount} p.`\n        : 'No information about the number of pages',\n      thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\n      language: comics.textObjects[0]?.language || 'en-us',\n      price: comics.prices[0].price\n        ? `${comics.prices[0].price}$`\n        : 'not available',\n    };\n  };\n\n  return {\n    loading,\n    error,\n    clearError,\n    getAllCharacters,\n    getCharacterByName,\n    getCharacter,\n    getAllComics,\n    getComic,\n  };\n};\n\nexport default useMarvelService;\n","import { useState, useCallback } from 'react';\n\nexport const useHttp = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const request = useCallback(\n    async (\n      url,\n      method = 'GET',\n      body = null,\n      headers = { 'Content-Type': 'application/json' }\n    ) => {\n      setLoading(true);\n\n      try {\n        const response = await fetch(url, { method, body, headers });\n\n        if (!response.ok) {\n          throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n        }\n\n        const data = await response.json();\n\n        setLoading(false);\n        return data;\n      } catch (e) {\n        setLoading(false);\n        setError(e.message);\n        throw e;\n      }\n    },\n    []\n  );\n\n  const clearError = useCallback(() => setError(null), []);\n\n  return { loading, request, error, clearError };\n};\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["_jsxs","className","children","_jsx","src","avengers","alt","avengersLogo","style","display","width","height","objectFit","margin","img","_ref","Component","dataType","id","useParams","_useState","useState","_useState2","_slicedToArray","data","setData","_useMarvelService","useMarvelService","loading","error","getComic","getCharacter","clearError","useEffect","updateData","then","onDataLoaded","catch","console","warn","concat","errorMessage","ErrorMessage","spinner","Spinner","content","_Fragment","AppBanner","_useHttp","setLoading","_useState3","_useState4","setError","request","useCallback","_asyncToGenerator","_regeneratorRuntime","_callee","url","method","body","headers","response","_args","arguments","_context","prev","next","length","undefined","fetch","sent","ok","Error","status","json","abrupt","t0","message","stop","_x","apply","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacterByName","_ref2","_callee2","name","_context2","_ref3","_callee3","_context3","_x2","getAllComics","_ref4","_callee4","_args4","_context4","_transformComics","_ref5","_callee5","_context5","_x3","char","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","_comics$textObjects$","title","pageCount","language","textObjects","price","prices","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","fn","self","this","args","err"],"sourceRoot":""}