{"version":3,"file":"static/js/633.39dd3b76.chunk.js","mappings":"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","sources":["components/appBanner/AppBanner.js","components/errorMessage/ErrorMessage.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js","services/MarvelService.js","hooks/http.hook.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n  return (\n    <div className=\"app__banner\">\n      <img src={avengers} alt=\"Avengers\" />\n      <div className=\"app__banner-text\">\n        New comics every week!\n        <br />\n        Stay tuned!\n      </div>\n      <img src={avengersLogo} alt=\"Avengers logo\" />\n    </div>\n  );\n};\n\nexport default AppBanner;\n","import img from './error.gif';\n\nconst ErrorMessage = () => {\n  return (\n    <img\n      style={{\n        display: 'block',\n        width: '250px',\n        height: '250px',\n        objectFit: 'contain',\n        margin: '0 auto',\n      }}\n      src={img}\n      alt=\"Error\"\n    />\n  );\n};\n\nexport default ErrorMessage;\n","import { useState, useEffect } from 'react';\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport { Link } from 'react-router-dom';\n\nimport './comicsList.scss';\n\nconst ComicsList = () => {\n  const [comicsList, setComicsList] = useState([]);\n  const [newItemLoading, setnewItemLoading] = useState(false);\n  const [offset, setOffset] = useState(0);\n  const [comicsEnded, setComicsEnded] = useState(false);\n\n  const { loading, error, getAllComics } = useMarvelService();\n\n  useEffect(() => {\n    onRequest(offset, true);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const onRequest = (offset, initial) => {\n    initial ? setnewItemLoading(false) : setnewItemLoading(true);\n    getAllComics(offset).then(onComicsListLoaded);\n  };\n\n  const onComicsListLoaded = newComicsList => {\n    let ended = false;\n    if (newComicsList.length < 8) {\n      ended = true;\n    }\n    setComicsList([...comicsList, ...newComicsList]);\n    setnewItemLoading(false);\n    setOffset(offset + 8);\n    setComicsEnded(ended);\n  };\n\n  function renderItems(arr) {\n    const items = arr.map((item, i) => {\n      return (\n        <li className=\"comics__item\" key={i}>\n          <Link to={`/comics/${item.id}`}>\n            <img\n              src={item.thumbnail}\n              alt={item.title}\n              className=\"comics__item-img\"\n            />\n            <div className=\"comics__item-name\">{item.title}</div>\n            <div className=\"comics__item-price\">{item.price}</div>\n          </Link>\n        </li>\n      );\n    });\n\n    return <ul className=\"comics__grid\">{items}</ul>;\n  }\n\n  const items = renderItems(comicsList);\n\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading && !newItemLoading ? <Spinner /> : null;\n\n  return (\n    <div className=\"comics__list\">\n      {errorMessage}\n      {spinner}\n      {items}\n      <button\n        disabled={newItemLoading}\n        style={{ display: comicsEnded ? 'none' : 'block' }}\n        className=\"button button__main button__long\"\n        onClick={() => onRequest(offset)}\n      >\n        <div className=\"inner\">load more</div>\n      </button>\n    </div>\n  );\n};\n\nexport default ComicsList;\n","import { Helmet } from 'react-helmet';\nimport ComicsList from '../comicsList/ComicsList';\nimport AppBanner from '../appBanner/AppBanner';\n\nconst ComicsPage = () => {\n  return (\n    <>\n      <Helmet>\n        <meta name=\"description\" content=\"Page width list of our comics\" />\n        <title>Comics page</title>\n      </Helmet>\n      <AppBanner />\n      <ComicsList />\n    </>\n  );\n};\n\nexport default ComicsPage;\n","import { useHttp } from '../hooks/http.hook';\n\nconst useMarvelService = () => {\n  const { loading, request, error, clearError } = useHttp();\n\n  const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n  // ЗДЕСЬ БУДЕТ ВАШ КЛЮЧ, ЭТОТ КЛЮЧ МОЖЕТ НЕ РАБОТАТЬ\n  const _apiKey = 'apikey=c5d6fc8b83116d92ed468ce36bac6c62';\n  const _baseOffset = 210;\n\n  const getAllCharacters = async (offset = _baseOffset) => {\n    const res = await request(\n      `${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\n    );\n    return res.data.results.map(_transformCharacter);\n  };\n\n  // Вариант модификации готового метода для поиска по имени.\n  // Вызывать его можно вот так: getAllCharacters(null, name)\n\n  // const getAllCharacters = async (offset = _baseOffset, name = '') => {\n  //     const res = await request(`${_apiBase}characters?limit=9&offset=${offset}${name ? `&name=${name}` : '' }&${_apiKey}`);\n  //     return res.data.results.map(_transformCharacter);\n  // }\n\n  // Или можно создать отдельный метод для поиска по имени\n\n  const getCharacterByName = async name => {\n    const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\n    return res.data.results.map(_transformCharacter);\n  };\n\n  const getCharacter = async id => {\n    const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n    return _transformCharacter(res.data.results[0]);\n  };\n\n  const getAllComics = async (offset = 0) => {\n    const res = await request(\n      `${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\n    );\n    return res.data.results.map(_transformComics);\n  };\n\n  const getComic = async id => {\n    const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n    return _transformComics(res.data.results[0]);\n  };\n\n  const _transformCharacter = char => {\n    return {\n      id: char.id,\n      name: char.name,\n      description: char.description\n        ? `${char.description.slice(0, 210)}...`\n        : 'There is no description for this character',\n      thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n      homepage: char.urls[0].url,\n      wiki: char.urls[1].url,\n      comics: char.comics.items,\n    };\n  };\n\n  const _transformComics = comics => {\n    return {\n      id: comics.id,\n      title: comics.title,\n      description: comics.description || 'There is no description',\n      pageCount: comics.pageCount\n        ? `${comics.pageCount} p.`\n        : 'No information about the number of pages',\n      thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\n      language: comics.textObjects[0]?.language || 'en-us',\n      price: comics.prices[0].price\n        ? `${comics.prices[0].price}$`\n        : 'not available',\n    };\n  };\n\n  return {\n    loading,\n    error,\n    clearError,\n    getAllCharacters,\n    getCharacterByName,\n    getCharacter,\n    getAllComics,\n    getComic,\n  };\n};\n\nexport default useMarvelService;\n","import { useState, useCallback } from 'react';\n\nexport const useHttp = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const request = useCallback(\n    async (\n      url,\n      method = 'GET',\n      body = null,\n      headers = { 'Content-Type': 'application/json' }\n    ) => {\n      setLoading(true);\n\n      try {\n        const response = await fetch(url, { method, body, headers });\n\n        if (!response.ok) {\n          throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n        }\n\n        const data = await response.json();\n\n        setLoading(false);\n        return data;\n      } catch (e) {\n        setLoading(false);\n        setError(e.message);\n        throw e;\n      }\n    },\n    []\n  );\n\n  const clearError = useCallback(() => setError(null), []);\n\n  return { loading, request, error, clearError };\n};\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["_jsxs","className","children","_jsx","src","avengers","alt","avengersLogo","style","display","width","height","objectFit","margin","img","_useState","useState","_useState2","_slicedToArray","comicsList","setComicsList","_useState3","_useState4","newItemLoading","setnewItemLoading","_useState5","_useState6","offset","setOffset","_useState7","_useState8","comicsEnded","setComicsEnded","_useMarvelService","useMarvelService","loading","error","getAllComics","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","concat","_toConsumableArray","items","arr","map","item","i","Link","to","id","thumbnail","title","price","renderItems","errorMessage","ErrorMessage","spinner","Spinner","disabled","onClick","_Fragment","Helmet","name","content","AppBanner","ComicsList","_useHttp","setLoading","setError","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","url","method","body","headers","response","data","_args","arguments","_context","prev","next","undefined","fetch","sent","ok","Error","status","json","abrupt","t0","message","stop","_x","apply","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","res","results","_transformCharacter","getCharacterByName","_ref2","_callee2","_context2","getCharacter","_ref3","_callee3","_context3","_x2","_ref4","_callee4","_args4","_context4","_transformComics","getComic","_ref5","_callee5","_context5","_x3","char","description","slice","path","extension","homepage","urls","wiki","comics","_comics$textObjects$","pageCount","language","textObjects","prices","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","fn","self","this","args","err"],"sourceRoot":""}