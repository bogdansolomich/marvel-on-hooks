{"version":3,"file":"static/js/633.1f7eb0fc.chunk.js","mappings":"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","sources":["components/appBanner/AppBanner.js","components/errorMessage/ErrorMessage.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js","services/MarvelService.js","hooks/http.hook.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n  return (\n    <div className=\"app__banner\">\n      <img src={avengers} alt=\"Avengers\" />\n      <div className=\"app__banner-text\">\n        New comics every week!\n        <br />\n        Stay tuned!\n      </div>\n      <img src={avengersLogo} alt=\"Avengers logo\" />\n    </div>\n  );\n};\n\nexport default AppBanner;\n","import img from './error.gif';\n\nconst ErrorMessage = () => {\n  return (\n    <img\n      style={{\n        display: 'block',\n        width: '250px',\n        height: '250px',\n        objectFit: 'contain',\n        margin: '0 auto',\n      }}\n      src={img}\n      alt=\"Error\"\n    />\n  );\n};\n\nexport default ErrorMessage;\n","import { useState, useEffect } from 'react';\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport { Link } from 'react-router-dom';\n\nimport './comicsList.scss';\n\nconst setContent = (process, Component, newItemLoading) => {\n  switch (process) {\n    case 'waiting':\n      return <Spinner />;\n    case 'loading':\n      return newItemLoading ? <Component /> : <Spinner />;\n    case 'confirmed':\n      return <Component />;\n    case 'error':\n      return <ErrorMessage />;\n    default:\n      throw new Error('Unexpected process state');\n  }\n};\n\nconst ComicsList = () => {\n  const [comicsList, setComicsList] = useState([]);\n  const [newItemLoading, setnewItemLoading] = useState(false);\n  const [offset, setOffset] = useState(0);\n  const [comicsEnded, setComicsEnded] = useState(false);\n\n  const { getAllComics, process, setPropcess } = useMarvelService();\n\n  useEffect(() => {\n    onRequest(offset, true);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const onRequest = (offset, initial) => {\n    initial ? setnewItemLoading(false) : setnewItemLoading(true);\n    getAllComics(offset)\n      .then(onComicsListLoaded)\n      .then(() => setPropcess('confirmed'));\n  };\n\n  const onComicsListLoaded = newComicsList => {\n    let ended = false;\n    if (newComicsList.length < 8) {\n      ended = true;\n    }\n    setComicsList([...comicsList, ...newComicsList]);\n    setnewItemLoading(false);\n    setOffset(offset + 8);\n    setComicsEnded(ended);\n  };\n\n  function renderItems(arr) {\n    const items = arr.map((item, i) => {\n      return (\n        <li className=\"comics__item\" key={i}>\n          <Link to={`/comics/${item.id}`}>\n            <img\n              src={item.thumbnail}\n              alt={item.title}\n              className=\"comics__item-img\"\n            />\n            <div className=\"comics__item-name\">{item.title}</div>\n            <div className=\"comics__item-price\">{item.price}</div>\n          </Link>\n        </li>\n      );\n    });\n\n    return <ul className=\"comics__grid\">{items}</ul>;\n  }\n\n  return (\n    <div className=\"comics__list\">\n      {setContent(process, () => renderItems(comicsList), newItemLoading)}\n      <button\n        disabled={newItemLoading}\n        style={{ display: comicsEnded ? 'none' : 'block' }}\n        className=\"button button__main button__long\"\n        onClick={() => onRequest(offset)}\n      >\n        <div className=\"inner\">load more</div>\n      </button>\n    </div>\n  );\n};\n\nexport default ComicsList;\n","import { Helmet } from 'react-helmet';\nimport ComicsList from '../comicsList/ComicsList';\nimport AppBanner from '../appBanner/AppBanner';\n\nconst ComicsPage = () => {\n  return (\n    <>\n      <Helmet>\n        <meta name=\"description\" content=\"Page width list of our comics\" />\n        <title>Comics page</title>\n      </Helmet>\n      <AppBanner />\n      <ComicsList />\n    </>\n  );\n};\n\nexport default ComicsPage;\n","import { useHttp } from '../hooks/http.hook';\n\nconst useMarvelService = () => {\n  const { request, clearError, process, setPropcess } = useHttp();\n\n  const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n  // ЗДЕСЬ БУДЕТ ВАШ КЛЮЧ, ЭТОТ КЛЮЧ МОЖЕТ НЕ РАБОТАТЬ\n  const _apiKey = 'apikey=c5d6fc8b83116d92ed468ce36bac6c62';\n  const _baseOffset = 210;\n\n  const getAllCharacters = async (offset = _baseOffset) => {\n    const res = await request(\n      `${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\n    );\n    return res.data.results.map(_transformCharacter);\n  };\n\n  // Вариант модификации готового метода для поиска по имени.\n  // Вызывать его можно вот так: getAllCharacters(null, name)\n\n  // const getAllCharacters = async (offset = _baseOffset, name = '') => {\n  //     const res = await request(`${_apiBase}characters?limit=9&offset=${offset}${name ? `&name=${name}` : '' }&${_apiKey}`);\n  //     return res.data.results.map(_transformCharacter);\n  // }\n\n  // Или можно создать отдельный метод для поиска по имени\n\n  const getCharacterByName = async name => {\n    const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\n    return res.data.results.map(_transformCharacter);\n  };\n\n  const getCharacter = async id => {\n    const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n    return _transformCharacter(res.data.results[0]);\n  };\n\n  const getAllComics = async (offset = 0) => {\n    const res = await request(\n      `${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\n    );\n    return res.data.results.map(_transformComics);\n  };\n\n  const getComic = async id => {\n    const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n    return _transformComics(res.data.results[0]);\n  };\n\n  const _transformCharacter = char => {\n    return {\n      id: char.id,\n      name: char.name,\n      description: char.description\n        ? `${char.description.slice(0, 210)}...`\n        : 'There is no description for this character',\n      thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n      homepage: char.urls[0].url,\n      wiki: char.urls[1].url,\n      comics: char.comics.items,\n    };\n  };\n\n  const _transformComics = comics => {\n    return {\n      id: comics.id,\n      title: comics.title,\n      description: comics.description || 'There is no description',\n      pageCount: comics.pageCount\n        ? `${comics.pageCount} p.`\n        : 'No information about the number of pages',\n      thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\n      language: comics.textObjects[0]?.language || 'en-us',\n      price: comics.prices[0].price\n        ? `${comics.prices[0].price}$`\n        : 'not available',\n    };\n  };\n\n  return {\n    clearError,\n    process,\n    setPropcess,\n    getAllCharacters,\n    getCharacterByName,\n    getCharacter,\n    getAllComics,\n    getComic,\n  };\n};\n\nexport default useMarvelService;\n","import { useState, useCallback } from 'react';\n\nexport const useHttp = () => {\n  const [process, setPropcess] = useState('waiting');\n\n  const request = useCallback(\n    async (\n      url,\n      method = 'GET',\n      body = null,\n      headers = { 'Content-Type': 'application/json' }\n    ) => {\n      setPropcess('loading');\n\n      try {\n        const response = await fetch(url, { method, body, headers });\n\n        if (!response.ok) {\n          throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n        }\n\n        const data = await response.json();\n\n        return data;\n      } catch (e) {\n        setPropcess('error');\n        throw e;\n      }\n    },\n    []\n  );\n\n  const clearError = useCallback(() => {\n    setPropcess('loading');\n  }, []);\n\n  return { request, clearError, process, setPropcess };\n};\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["_jsxs","className","children","_jsx","src","avengers","alt","avengersLogo","style","display","width","height","objectFit","margin","img","setContent","process","Component","newItemLoading","Spinner","ErrorMessage","Error","_useState","useState","_useState2","_slicedToArray","comicsList","setComicsList","_useState3","_useState4","setnewItemLoading","_useState5","_useState6","offset","setOffset","_useState7","_useState8","comicsEnded","setComicsEnded","_useMarvelService","useMarvelService","getAllComics","setPropcess","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","concat","_toConsumableArray","arr","items","map","item","i","Link","to","id","thumbnail","title","price","renderItems","disabled","onClick","_Fragment","Helmet","name","content","AppBanner","ComicsList","_useHttp","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","url","method","body","headers","response","data","_args","arguments","_context","prev","next","undefined","fetch","sent","ok","status","json","abrupt","t0","stop","_x","apply","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","res","results","_transformCharacter","getCharacterByName","_ref2","_callee2","_context2","getCharacter","_ref3","_callee3","_context3","_x2","_ref4","_callee4","_args4","_context4","_transformComics","getComic","_ref5","_callee5","_context5","_x3","char","description","slice","path","extension","homepage","urls","wiki","comics","_comics$textObjects$","pageCount","language","textObjects","prices","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","fn","self","this","args","err"],"sourceRoot":""}